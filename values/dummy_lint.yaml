#####################################################
# DO NOT USE THIS FILE; IT IS JUST FOR TEST-LINTING
# - We simply enable everything here
#####################################################
################
# DUMMY VALUES #
################
dummyAnnotation: &dummyAnnotations
  isFoo: perhaps
  isBar: maybe
dummyLabel: &dummyLabels
  dummy: "dummyLabel"
dummyStringArray: &dummyStringArray
  - dummy
  - yummy
#################
# ACTUAL VALUES #
#################
backups:
  enabled: true
  s3:
    endpoint: rondb.com
benchmarking:
  enabled: true
  sysbench:
    minimizeBandwidth: true
enableSecurityContext: true
globalReplication:
  primary:
    enabled: true
    ignoreDatabases: *dummyStringArray
    ignoreTables: *dummyStringArray
    logReplicaUpdates: true
  secondary:
    enabled: true
    replicateFrom:
      binlogServerHosts: *dummyStringArray
      ignoreDatabases: *dummyStringArray
      ignoreTables: *dummyStringArray
      useTlsConnection: true
imagePullSecrets:
- name: secret
isMultiNodeCluster: true
meta:
  binlogServers:
    externalLoadBalancers:
      annotations: *dummyAnnotations
      class: bla
      enabled: true
    statefulSet:
      endToEndTls:
        enabled: true
  mgmd:
    headlessClusterIp:
      annotations: *dummyAnnotations
  mysqld:
    addSysNiceCapability: true
    externalLoadBalancer:
      annotations: *dummyAnnotations
      class: abc
      enabled: true
    service:
      annotations: *dummyAnnotations
    statefulSet:
      endToEndTls:
        enabled: true
  ndbmtd:
    statefulSet:
      podAnnotations: *dummyAnnotations
  rdrs:
    annotations: *dummyAnnotations
    externalLoadBalancer:
      annotations: *dummyAnnotations
      class: abc
      enabled: true
    ingress:
      class: nginx
      dnsNames: *dummyStringArray
      enabled: true
      tls:
        enabled: true
        ipAddresses:
        - 127.0.0.1
      useDefaultBackend: true
    statefulSet:
      endToEndTls:
        enabled: true
  replicaAppliers:
    statefulSet:
      endToEndTls:
        enabled: true
mysql:
  exporter:
    enabled: true
  sqlInitContent:
    ycsbTable: |
      CREATE TABLE IF NOT EXISTS ycsb.usertable (
          YCSB_KEY VARCHAR(255) PRIMARY KEY,
          FIELD0 varbinary(4096)
      );
  users:
  - host: '%'
    privileges:
    - database: '*'
      privileges:
      - ALL
      table: '*'
      withGrantOption: true
    username: importantuser
networkPolicy:
  mgmds:
    enabled: true
    ingressSelectors:
    - podSelector:
        matchLabels: *dummyLabels
  ndbmtds:
    enabled: true
    ingressSelectors:
    - podSelector:
        matchLabels: *dummyLabels
nodeSelector:
  backup: &nodeSelector
    node: RonDB
  mgmd: *nodeSelector
  mysqld: *nodeSelector
  ndbmtd: *nodeSelector
  rdrs: *nodeSelector
rdrs:
  externalMetadataCluster:
    mgmds:
    - ip: 1.1.1.1
      port: 1186
resources:
  requests:
    storage:
      classes:
        default: bla
        diskColumns: foo
restoreFromBackup:
  backupId: 1
  excludeDatabases: *dummyStringArray
  excludeTables: *dummyStringArray
  objectStorageProvider: s3
  s3:
    endpoint: rondb.com
rondbConfig:
  InitialTablespaceSizeGiB: 1
serviceAccountAnnotations: *dummyAnnotations
staticCpuManagerPolicy: true
tls:
  caSecretName: some-secret
tolerations:
  backup: &tolerations
  - effect: NoSchedule
    key: node
    operator: Equal
    value: RonDB
  mgmd: *tolerations
  mysqld: *tolerations
  ndbmtd: *tolerations
  rdrs: *tolerations
