{
    "Internal": {
        "BufferSize": {{ $.Values.rdrs.internal.bufferSize | int }},
        "PreAllocatedBuffers": {{ $.Values.rdrs.internal.preAllocatedBuffers | int }},
        "MaxAllocatedBuffers": {{ $.Values.rdrs.internal.maxAllocatedBuffers | int }},
        "BatchMaxSize": {{ $.Values.rdrs.internal.batchMaxSize | int }}
    },
    "REST": {
        "Enable": true,
        "ServerIP": "0.0.0.0",
        "ServerPort": 4406
    },
    "GRPC": {
        "Enable": true,
        "ServerIP": "0.0.0.0",
        "ServerPort": 5406
    },
    "RonDB": {
        "Mgmds": [
            {
                "IP": {{ include "rondb.mgmdHostname" . | quote }},
                "Port": 1186
            }
        ],
        "ConnectionPoolSize": {{ $.Values.rondbConfig.RdrsSlotsPerNode }}
    },
{{- if eq (len $.Values.rdrs.externalMetadataCluster.mgmds) 0 }}
    "RonDBMetadataCluster": {
        "Mgmds": [
            {
                "IP": {{ include "rondb.mgmdHostname" . | quote }},
                "Port": 1186
            }
        ],
        "ConnectionPoolSize": {{ $.Values.rondbConfig.RdrsMetadataSlotsPerNode }}
    },
{{- else }}
    "RonDBMetadataCluster": {
        "Mgmds": [
{{- range $index, $mgmd := $.Values.rdrs.externalMetadataCluster.mgmds }}
            {
                "IP": {{ $mgmd.ip | quote }},
                "Port": {{ $mgmd.port | default 1186}}
            }{{- if ne (add1 $index) (len $.Values.rdrs.externalMetadataCluster.mgmds) }},{{- end }}
{{- end }}
        ],
        "ConnectionPoolSize": {{ $.Values.rdrs.externalMetadataCluster.slotsPerNode }}
    },
{{- end }}
    "Security": {
        "TLS": {
{{- with $endToEndTls := $.Values.meta.rdrs.statefulSet.endToEndTls }}
{{- if $endToEndTls.enabled }}
            "EnableTLS": true,
            "CertificateFile": "/etc/tls/{{ $endToEndTls.filenames.cert }}",
            "PrivateKeyFile": "/etc/tls/{{ $endToEndTls.filenames.key }}",
{{- if $endToEndTls.filenames.ca }}
            "RootCACertFile": "/etc/tls/{{ $endToEndTls.filenames.ca }}",
{{- end }}
{{- else }}
            "EnableTLS": false,
{{- end }}
{{- end }}
            "RequireAndVerifyClientCert": false
        },
        "APIKey": {
            "UseHopsworksAPIKeys": true
        }
    },
    "Log": {
        "Level": "info"
    }
}
