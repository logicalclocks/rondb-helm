[mysql]
default-character-set = utf8mb4

[mysqld]
basedir         = /srv/hops/mysql
{{ if .forBinlogServers -}}
datadir         = {{ include "rondb.mysqld.binlogServers.dataDir" $ }}
{{ else }}
datadir         = {{ include "rondb.mysqldDataDir" $ }}
{{ end }}
port            = 3306
socket          = {{ include "rondb.dataDir" $ }}/mysql.sock
bind-address    = 0.0.0.0
pid-file        = {{ include "rondb.dataDir" $ }}/mysqld.pid
tmpdir          = /tmp
max-connections = 512
max-prepared-stmt-count = 65530
log-error-verbosity = 3

# this allows us to run benchmarks
local_infile = ON

default-time-zone = "+00:00"

# Explicit defaults for TS needed by 'airflow initdb'
explicit_defaults_for_timestamp = 1

collation-server = utf8mb4_unicode_ci
init-connect='SET NAMES utf8mb4'
character-set-server = utf8mb4

# use NDB storage engine and make NDB the default table type
ndbcluster
default-storage-engine = ndbcluster

###################################
# RonDB performance optimizations #
###################################
#
# We only use the mysql-server for SELECT COUNT(*) operations. 
# This makes most other queries become much slower. 
# It can have a significant effect on performance. 
ndb-use-exact-count=0

# flush the adaptive-send buffer immediately 
ndb-force-send=0

# allow indexes to be used on ndb nodes (rather than joins performed in MySQL Server)
optimizer_switch=engine_condition_pushdown=on

# activate AQL for faster joins
ndb-join-pushdown=1

# use the cluster connection pool to reduce cluster connection setup time
ndb-cluster-connection-pool={{ $.Values.rondbConfig.MySQLdSlotsPerNode }}
ndb-cluster-connection-pool-nodeids=

# Log more data at MySQL Server about ndb
ndb-extra-logging=0

# for autoincrement, size of prefetching 
ndb-autoincrement-prefetch-sz=1024

# NDB transaction batche sizes. Higher batch sizes to optimize for throughput.
ndb-batch-size=1M

######################
# Global replication #
######################

{{/*
    This template-file is used for normal MySQLds, MySQL binlog servers and MySQL replica appliers.
    These are different Stateful Sets. This section is however only required for
    binlog servers and replica appliers.
*/}}

server-id                       =

{{ if .forBinlogServers -}}
# BINLOG SERVER
log_bin                         = {{ include "rondb.mysqld.binlogServers.binlogDir" $ }}/{{ $.Values.globalReplication.primary.binlogFilename }}
binlog-format                   = ROW
ndb_log_bin                     = ON
log_bin_trust_function_creators = ON
sync_binlog                     = 1
binlog-cache-size               = 8M
ndb_log_updated_only            = 1
log-replica-updates             = {{ $.Values.globalReplication.primary.logReplicaUpdates }}
{{ $seconds := mulf $.Values.globalReplication.primary.expireBinlogsDays 24 60 60 -}}
binlog_expire_logs_seconds      = {{ $seconds }}
binlog_expire_logs_auto_purge   = ON

{{- $ignoreBinlogDatabases := ((concat
    (include "rondb.databases.benchmarking" . | fromYamlArray)
    $.Values.globalReplication.primary.ignoreDatabases
) | uniq) }}
{{- range $ignoreBinlogDatabases }}
binlog_ignore_db                = {{ . }}
{{- end }}

{{- range $.Values.globalReplication.primary.ignoreTables }}
binlog_ignore_table             = {{ . }}
{{- end -}}

{{- end }}

{{ if .forReplicaAppliers -}}
# REPLICA APPLIER
relay_log                       = {{ include "rondb.mysqldRelayLogDir" . }}/relaylog
skip-replica-start              = 1
replica-allow-batching          = 1

{{- $ignoreReplicaDatabases := ((concat
    (include "rondb.databases.benchmarking" . | fromYamlArray)
    $.Values.globalReplication.secondary.replicateFrom.ignoreDatabases
) | uniq) }}
{{ range $ignoreReplicaDatabases -}}
replicate_ignore_db             = {{ . }}
{{ end -}}

{{- range $.Values.globalReplication.secondary.replicateFrom.ignoreTables }}
replicate_ignore_table          = {{ . }}
{{- end -}}

{{- end }}

####################
# TLS/SSL settings #
####################

{{- if .tls.enabled }}
require_secure_transport=ON

ssl_cert=/etc/tls/{{ .tls.filenames.cert }}
ssl_key=/etc/tls/{{ .tls.filenames.key }}
{{- if .tls.filenames.ca }}
ssl_ca={{ .tls.filenames.ca }}
{{- end }}
{{- end }}

[mysql_cluster]
# set connectstring to ndb management server (used by all executables)
ndb-connectstring={{ include "rondb.mgmdHostname" . }}:1186
ndb-wait-setup=600

# Setting a user/password here, does not need it has actually been created.
# It is simply the default client. We use this client for readiness probes.
[client]
default-character-set   = utf8mb4
socket                  = {{ include "rondb.dataDir" $ }}/mysql.sock
user                    = {{ $.Values.mysql.clusterUser }}
password                =
