name: 'Publish Helm chart'
description: 'Reusable action to publish RonDB Helm chart'
inputs:
  chart_version:
    description: 'Helm chart version to publish'
    required: true
  allow_overwrite:
    description: 'Whether to allow overwriting released Charts; this should only be allowed for dev versions'
    default: "false"
    required: true
  gh_token:
    description: 'GitHub token'
    required: true
  # Using this as env variable
  VALUES_README_FILE:
    description: 'File containing values.schema.json as Markdown'
    default: 'values.schema.md'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Overwrite version in Chart.yaml
      shell: bash
      run: |
        sed -i "s/^version:.*/version: ${{ inputs.chart_version }}/" Chart.yaml

    - shell: bash
      run: pip3 install -r .github/requirements.txt

    - name: Check if values.schema.json == values.yaml
      shell: bash
      run: |
        current_hash=$(sha256sum values.yaml | awk '{print $1}')
        python3 .github/json_to_yaml.py
        ./.github/update_copyright.sh || true
        updated_hash=$(sha256sum values.yaml | awk '{print $1}')

        # values.schema.json is treated as the single source of truth (also for the docs)
        if [ "$current_hash" != "$updated_hash" ]; then
          echo "::error The values.yaml does not represent the values.schema.json file, please run .github/json_to_yaml.py"
          echo "::notice Don't forget to add copyrights after running the script (use .github/update_copyright.sh)"
          exit 1
        fi

    - name: Create a Markdown table from values.schema.json
      shell: bash
      run: python3 .github/values_json_to_markdown.py --output ${{ inputs.VALUES_README_FILE }}

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
          version: '3.13.3'
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}

    - name: Configure Git
      shell: bash
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Package Helm Charts
      shell: bash
      run: helm package . --destination /tmp/charts/

    - name: Checkout gh-pages branch
      shell: bash
      run: |
        # Stash first since we changed Chart.yaml
        git stash
        git fetch origin gh-pages
        git checkout gh-pages

    - name: Copy chart to repo
      shell: bash
      run: |
        mkdir -p charts
        for file in /tmp/charts/*; do
          if [[ -f "$file" ]]; then
            dest_file="charts/$(basename "$file")"
            if [[ -e "$dest_file" && "${{ inputs.allow_overwrite }}" != "true" ]]; then
              echo "Skipping $file as it already exists and we cannot overwrite."
            else
              cp "$file" "$dest_file"
              echo "Copied $file to $dest_file"
            fi
          fi
        done

    - name: Generate index.yaml corresponding to the existing charts
      shell: bash
      run: helm repo index . --url https://logicalclocks.github.io/rondb-helm/

    - name: Write README.md including values table
      shell: bash
      run: |
        cat ./README_intro.md > ./README.md
        echo >> ./README.md
        echo "This has been auto-generated from the `values.schema.json` file." >> ./README.md
        echo >> ./README.md
        echo "Chart version is **${{ inputs.chart_version }}**. See commit history for previous schemata." >> ./README.md
        echo >> ./README.md
        cat ${{ inputs.VALUES_README_FILE }} >> ./README.md

    - name: Commit and Push to gh-pages
      shell: bash
      run: |
        git add ./charts/*
        git add index.yaml
        git add README.md
        git commit -m "Release RonDB Helm chart ${{ inputs.chart_version }}"
        git push origin gh-pages
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
