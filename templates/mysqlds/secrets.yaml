apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Values.mysql.credentialsSecretName }}
  namespace: {{ .Release.Namespace }}
  labels:
    type: generated-password
{{/*
    In Global Replication, one will still need to share passwords across (RonDB and Kubernetes) clusters.
    In those cases, one can also decide to define this Secret before instantiating the RonDB Helmchart -
    the lookup function will still work the same way.
*/}}
{{- $secret := lookup "v1" "Secret" .Release.Namespace (include "rondb.mysql.usersSecretName" .) }}
data:
{{- $users := list
    "root"
    .Values.benchmarking.mysqlUsername
}}
{{- if and .Values.global .Values.global._hopsworks }}
   {{- $users = append $users (include "hopsworkslib.mysql.hopsworksRootUser" .) }}
{{- end }}
{{- if .Values.mysql.exporter.enabled }}
   {{- $users = append $users .Values.mysql.exporter.username }}
{{- end }}
{{- range $user := $users}}
   {{- if and $secret (index $secret "data" $user)}}
{{ $user | indent 2 }}: {{ index $secret "data" $user | quote}}
   {{- else }}
{{ $user | indent 2 }}: {{ randAlphaNum 20 | b64enc | quote }}
   {{- end }}
{{- end }}