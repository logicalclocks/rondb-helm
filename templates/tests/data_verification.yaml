# Copyright (c) 2024-2024 Hopsworks. All rights reserved.

{{- define "rondb.dataPod" -}}
{{/*
Depending on the input, this template can create both a Pod that
generates dummy data and a Pod that verifies the data. This can be
used to test data storage of arbitrary cluster, but also whether
a backup has been restored correctly on a new cluster.
*/}}
apiVersion: v1
kind: Pod
metadata:
  name: {{ .functionName | quote }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": {{ .hookWeight | quote }}
spec:
  restartPolicy: Never
  initContainers:    
{{ include "rondb.apiInitContainer" . | indent 4 }}
  containers:
    - name: {{ .functionName | quote }}
      image: {{ include "image_address" (dict "image" .Values.images.dataValidation) }}
      command:
      - /bin/bash
      - -c
      - |
{{- $utilsDir := "/home/utils" }}
{{- $scriptsDir := "/home/sql-scripts" }}
        pip3 install -r {{ $utilsDir }}/requirements.txt
        python3 {{ $utilsDir }}/mysql_data.py \
          --mysql-hostname "$MYSQL_HOSTNAME" \
          --mysql-user "$MYSQL_CLUSTER_USER" \
          --mysql-password "$MYSQL_CLUSTER_PASSWORD" \
          --sql-scripts-dir {{ $scriptsDir | quote }} \
          --run {{ .functionName | quote }}
      env:
        - name: MYSQL_HOSTNAME
          value: {{ include "rondb.mysqldServiceHostname" . }}
        - name: MYSQL_CLUSTER_USER
          value: {{ .Values.mysql.clusterUser }}
        - name: MYSQL_CLUSTER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: {{ .Values.mysql.clusterUser }}
              name: {{ $.Values.mysql.credentialsSecretName }}
      volumeMounts:
      - name: mysql-client-configs
        mountPath: {{ $utilsDir }}
      - name: sql-test-scripts
        mountPath: {{ $scriptsDir }}
  volumes:
  - name: mysql-client-configs
    configMap:
      name: mysql-client-configs
  - name: sql-test-scripts
    configMap:
      name: sql-test-scripts
{{- end -}}

{{ include "rondb.dataPod" (merge (dict 
    "functionName" "generate-data"
    "hookWeight" 10
) .) }}
---
{{ include "rondb.dataPod" (merge (dict 
    "functionName" "verify-data"
    "hookWeight" 11
) .) }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-client-configs
  namespace: {{ .Release.Namespace }}
data:
  requirements.txt: |
{{ tpl (.Files.Get "files/testing/requirements.txt") . | indent 4 }}
  mysql_data.py: |
{{ tpl (.Files.Get "files/testing/mysql_data.py") . | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sql-test-scripts
  namespace: {{ .Release.Namespace }}
data:
{{- (.Files.Glob "files/testing/sql_tables/**.sql").AsConfig | nindent 2 }}
