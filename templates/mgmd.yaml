apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.meta.mgmd.statefulSetName }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ .Values.meta.mgmd.headlessClusterIp.name }}
  replicas: 1
  selector:
    # Used by the Deployment to select and manage existing pods with the specified label
    matchLabels:
      rondbService: {{ include "rondb.labels.rondbService.mgmd" $ }}
  volumeClaimTemplates:
    - metadata:
        name: rondb-mgmd
      spec:
        accessModes: [ReadWriteOnce]
{{ include "rondb.storageClass.default" . | indent 8 }}
        resources:
          requests:
            storage: 30Mi
  # Still in beta mode (Jan 2024)
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Retain
  template:
    metadata:
      # Used to apply labels to all pods created by the Deployment
      labels:
        rondbService: {{ include "rondb.labels.rondbService.mgmd" $ }}
    spec:
{{- include "hopsworkslib.imagePullSecrets" . | indent 6 }}
{{- include "rondb.SecurityContext" $ | indent 6 }}
      {{ if .Values.priorityClass -}}
      priorityClassName: {{ .Values.priorityClass | quote }}
      {{- end  }}
      containers:
      - name: mgmd
        image: {{ include "image_address" (dict "image" .Values.images.rondb) }}
        imagePullPolicy: {{ include "hopsworkslib.imagePullPolicy" . | default "IfNotPresent" }}
        command:
          - /bin/bash
          - -c
          - |
{{ tpl (.Files.Get "files/scripts/mgmds.sh") . | indent 12 }}
        # MGMDs have publishNotReadyAddresses set to false.
        # Adding a readiness probe will therefore have a direct
        # effect on whether other services can reach the MGMd.
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - ndb_mgm -e show
          initialDelaySeconds: 5
          failureThreshold: 3
          periodSeconds: 4
          timeoutSeconds: 2
        # Having a lively MGMd is crucial for other services' healthchecks.
        # Restarting MGMds does not cost much and should be quick.
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - ndb_mgm -e show
          initialDelaySeconds: 5
          failureThreshold: 5
          periodSeconds: 5
          timeoutSeconds: 5
        ports:
          - containerPort: 1186
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpus.mgmds }}
            memory: 500Mi
          requests:
            cpu: {{ .Values.resources.requests.cpus.mgmds }}
            memory: 100Mi
        env:
        volumeMounts:
        # Only mount single file, otherwise entire directory becomes read-only
        - name: mgmd-configs
          mountPath: {{ include "rondb.dataDir" $ }}/config.ini
          subPath: config.ini
        - name: rondb-mgmd
          mountPath: {{ include "rondb.dataDir" $ }}/default_storage
        {{ include "hopsworkslib.commonContainerSecurityContext" . | nindent 8 }}
      volumes:
      - name: mgmd-configs
        configMap:
          name: mgmd-configs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mgmd-configs
  namespace: {{ .Release.Namespace }}
data:
    config.ini: |
{{ tpl (.Files.Get "files/configs/config.ini") . | indent 8 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.meta.mgmd.headlessClusterIp.name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- range $k, $v := .Values.meta.mgmd.headlessClusterIp.annotations }}
    {{ $k }}: {{ $v | quote }}
    {{- end }}
spec:
  # Headless service for individual DNS records for the pods
  clusterIP: None
  # Match the spec.template.metadata.labels of the Deployment
  selector:
    rondbService: {{ include "rondb.labels.rondbService.mgmd" $ }}
  ports:
    - protocol: TCP
      port: {{ .Values.meta.mgmd.headlessClusterIp.port }}
      targetPort: 1186
